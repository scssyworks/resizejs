{"version":3,"file":"resize.js","sources":["../lib/constants.js","../index.js"],"sourcesContent":["export const mediaTypes = {\n    MOBILE: 'mobile',\n    MOBILE_SMALL: 'mobile-small',\n    MOBILE_LARGE: 'mobile-large',\n    TABLET: 'tablet',\n    TABLET_LARGE: 'tablet-large',\n    DESKTOP: 'desktop',\n    UNSUPPORTED: 'unsupported'\n};\nexport const orientationTypes = {\n    LANDSCAPE: 'landscape',\n    PORTRAIT: 'portrait',\n    UNSUPPORTED: 'unsupported'\n};","import { mediaTypes, orientationTypes } from './lib/constants';\n\n/**\n * Gets orientation of device\n * @private\n * @returns {string} orientation\n */\nfunction _getOrientation() {\n    if (window.matchMedia('(orientation: portrait)').matches) {\n        return orientationTypes.PORTRAIT;\n    } else if (window.matchMedia('(orientation: landscape)')) {\n        return orientationTypes.LANDSCAPE;\n    }\n    return orientationTypes.UNSUPPORTED;\n}\n\n/**\n * Checks if new media matches current media. If yes then returns true, else returns false and updates the currentMedia\n * @private\n * @param {object} newMedia\n * @returns {boolean} true|false\n */\nfunction _matches(newMedia) {\n    let testConditions = this.currentMedia.media === newMedia.media;\n    if (this.config.enableOrientationChange) {\n        testConditions = testConditions && this.currentMedia.orientation === newMedia.orientation\n    }\n    if (testConditions) {\n        return true;\n    }\n    this.currentMedia = newMedia;\n    return false;\n}\n\n/**\n * Checks if new media matches current media. If yes then returns true, else returns false and updates the currentMedia\n * @private\n * @param {object} newMedia\n * @returns {boolean} true|false\n */\nfunction _baseMatches(newMedia) {\n    let testConditions = this.currentMedia.baseMedia === newMedia.baseMedia;\n    if (this.config.enableOrientationChange) {\n        testConditions = testConditions && this.currentMedia.orientation === newMedia.orientation\n    }\n    return testConditions;\n}\n\n/**\n * Get's current device media details\n * @private\n * @returns {Object} media object\n */\nfunction _getMedia() {\n    const { mobile, mobileLarge, tablet, tabletLarge, desktop } = this.config.breakpoints;\n    const mediaInfo = {\n        orientation: this.getOrientation()\n    };\n    if (\n        window.matchMedia(`(max-width: ${mobile - 1}px)`).matches\n    ) {\n        return {\n            media: mediaTypes.MOBILE_SMALL,\n            baseMedia: mediaTypes.MOBILE,\n            ...mediaInfo\n        };\n    } else if (\n        window.matchMedia(`(min-width: ${mobile}px) and (max-width: ${mobileLarge - 1})`).matches\n    ) {\n        return {\n            media: mediaTypes.MOBILE,\n            baseMedia: mediaTypes.MOBILE,\n            ...mediaInfo\n        };\n    } else if (\n        window.matchMedia(`(min-width: ${mobileLarge}px) and (max-width: ${tablet - 1})`).matches\n    ) {\n        return {\n            media: mediaTypes.MOBILE_LARGE,\n            baseMedia: mediaTypes.MOBILE,\n            ...mediaInfo\n        };\n    } else if (\n        window.matchMedia(`(min-width: ${tablet}px) and (max-width: ${tabletLarge - 1})`).matches\n    ) {\n        return {\n            media: mediaTypes.TABLET,\n            baseMedia: mediaTypes.TABLET,\n            ...mediaInfo\n        };\n    } else if (\n        window.matchMedia(`(min-width: ${tabletLarge}px) and (max-width: ${desktop - 1})`).matches\n    ) {\n        return {\n            media: mediaTypes.TABLET_LARGE,\n            baseMedia: mediaTypes.TABLET,\n            ...mediaInfo\n        };\n    } else {\n        return {\n            media: mediaTypes.DESKTOP,\n            baseMedia: mediaTypes.DESKTOP,\n            ...mediaInfo\n        };\n    }\n}\n\n/**\n * Resizable class for responsive events\n * @public\n */\nexport default class Resizable {\n    /**\n     * Resizable constructor\n     * @constructor\n     * @param {object} config Configuration object\n     */\n    constructor(config) {\n        config = config && typeof config === 'object' ? config : {};\n        this.currentMedia = null;\n        this.config = {\n            breakpoints: {\n                mobile: 320,\n                mobileLarge: 414,\n                tablet: 768,\n                tabletLarge: 1024,\n                desktop: 1200\n            },\n            enableOrientationChange: false,\n            ...config\n        };\n        window.addEventListener('resize', () => {\n            const CustomEventConst = CustomEvent || Event;\n            const newMedia = this.getMedia();\n            const customEventConfig = {\n                detail: {\n                    ...newMedia\n                },\n                bubbles: false,\n                cancelable: false\n            };\n            const mediaChanged = new CustomEventConst(\n                'media.changed',\n                customEventConfig\n            );\n            const baseMediaChanged = new CustomEventConst(\n                'basemedia.changed',\n                customEventConfig\n            );\n            if (!_matches.apply(this, [newMedia])) {\n                window.dispatchEvent(mediaChanged);\n            }\n            if (!_baseMatches.apply(this, [newMedia])) {\n                window.dispatchEvent(baseMediaChanged);\n            }\n        });\n    }\n    getMedia() {\n        return _getMedia.apply(this, arguments);\n    }\n    getOrientation() {\n        return _getOrientation.apply(this, arguments);\n    }\n}"],"names":["mediaTypes","MOBILE","MOBILE_SMALL","MOBILE_LARGE","TABLET","TABLET_LARGE","DESKTOP","UNSUPPORTED","orientationTypes","LANDSCAPE","PORTRAIT","_getOrientation","window","matchMedia","matches","_matches","newMedia","testConditions","currentMedia","media","config","enableOrientationChange","orientation","_baseMatches","baseMedia","_getMedia","breakpoints","mobile","mobileLarge","tablet","tabletLarge","desktop","mediaInfo","getOrientation","Resizable","addEventListener","CustomEventConst","CustomEvent","Event","getMedia","customEventConfig","detail","bubbles","cancelable","mediaChanged","baseMediaChanged","apply","dispatchEvent","arguments"],"mappings":"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"}